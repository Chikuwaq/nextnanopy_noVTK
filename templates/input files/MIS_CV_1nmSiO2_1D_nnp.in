#---------------------------------------------------------------------------!
# This input file for an n-channel MOS capacitor is copyrighted
# by stefan.birner@nextnano.com.
#
# It is based on the following papers:
#
#  [Chim]
#    "Modeling of charge quantization and wave function penetration effects
#    in a metal-oxide-semiconductor system with ultrathin gate oxide"
#    W.K. Chim, J.X. Zheng, B.H. Koh
#    Journal of Applied Physics 94 (8), 5273 (2003)
#
#  [Richter]
#    "A Comparison of Quantum-Mechanical Capacitance-Voltage Simulators"
#    C.A. Richter, A.R. Hefner, E.M. Vogel
#    IEEE Electron Device Letters 22 (1), 35 (2001)
#
#---------------------------------------------------------------------------!

#---------------------------------------------------------------------------!

#---------------------------------------------------------------------------!
# [Chim, Fig. 2a)] 3 nm SiO2, N_poly =  50 * 10^18 / cm^3 = 5 * 10^19 / cm^3
#                             N_d    = 0.3 * 10^18 / cm^3 = 3 * 10^17 / cm^3
#---------------------------------------------------------------------------!
# ==> for this case choose $FLAG = 1


#---------------------------------------------------------------------------!
# [Chim, Fig. 2b)] 1 nm SiO2, N_poly = 100 * 10^18 / cm^3 = 1 * 10^20 / cm^3
#                             N_d    = 1   * 10^18 / cm^3
#---------------------------------------------------------------------------!
# ==> for this case choose $FLAG = 0

# ATTENTION! Please choose manually also the corresponding oxide thickness to compare the results with the tutorial.
#$FLAG     = 1               # 0 or 1   [Chim, Fig. 2a)]
 $FLAG     = 0               # 0 or 1   [Chim, Fig. 2b)]
 $ANTIFLAG = 1 - $FLAG       # 1 or 0   (DoNotShowInUserInterface)

 $OxideThickness = 1.0    # oxide thickness (DisplayUnit:nm) (RangeOfValues:From=1  ,To=3  ,Step=1) (ListOfValues:1.0,3.0) (HighLightInUserInterface) 
#$OxideThickness = 3.0    # oxide thickness (DisplayUnit:nm) (RangeOfValues:From=1  ,To=3  ,Step=1) (ListOfValues:1.0,3.0) (HighLightInUserInterface) 

# If the gate should be made of metal, choose $METALLICGATE = 1             (contact type is ohmic).
# For $METALLICGATE = 0 the gate is made of a doped semiconductor (poly-Si) (contact type is fermi).
 $METALLICGATE      = 0                   # 0 (n-poly-Si) or 1 (metallic gate)
#$METALLICGATE      = 1                   # 0 (n-poly-Si) or 1 (metallic gate)
 $SEMICONDUCTORGATE = 1 - $METALLICGATE   # 1 (n-poly-Si) or 0 (metallic gate) (DoNotShowInUserInterface)

# If Schroedinger equation (quantum mechanics) should not be solved, choose $QM = 0.
# In other case choose $QM = 1.
#$QM = 0              # 0 (classical calculation) or 1 (quantum mechanical calculation)
 $QM = 1              # 0 (classical calculation) or 1 (quantum mechanical calculation)


global{ 
   simulate1D{}
    # Simulation coordinate system rotated from z to x
   #database = "../Syntax/zincblende.in"
   
   # WARNING: check conversion limitations:
   # - only one "simulation-dimension" subsection in $numeric-control allowed
   # - only one quantum cluster supported, which must be rectangular
   # - only one quantum model allowed
   # - only one current cluster supported, covering the whole simulation area
   
   crystal_zb{
      x_hkl = [1, 0, 0]
      y_hkl = [0, 1, 0]
   }

   substrate{
      name = "Si"
   }

   temperature = 300.0E0 # [Chim] ! Kelvin
   # WARNING: Varshni parameters are always used in nextnano++

}

grid{
   xgrid{ # 0.20/0.50/1.00 nm grid
      line{ pos = -20.0 spacing = 0.2 }
      line{ pos = -15.0 spacing = 0.2 }
      line{ pos = -$OxideThickness - 0.2 spacing = 0.2 }
      line{ pos = -$OxideThickness - 0.01 spacing = 0.01 }
      line{ pos = -$OxideThickness  spacing = 0.2 } # improved grid for getting better result which corrensponds to nn3 for electron density at discontinuous conduction band jump SiO2 barrier 
      line{ pos = -$OxideThickness + 0.2 spacing = 0.2 } 
      line{ pos = -0.2 spacing = 0.2 }
      line{ pos = 0.0 spacing = 0.2 } # improved grid for getting better result which corrensponds to nn3 for hole density at discontinuous valance band jump SiO2 barrier 
      line{ pos = 0.01 spacing = 0.01 }
      line{ pos = 0.2 spacing = 0.2 }
      line{ pos = 10.0 spacing = 0.2 } # spacing changes from 0.01 to 0.2
      line{ pos = 29.8 spacing = 0.2 } # inserted
      line{ pos = 30.0 spacing = 0.5 } # spacing changes from 0.2 to 0.5
      line{ pos = 30.5 spacing = 0.5 } # inserted
      line{ pos = 49.5 spacing = 0.5 } # inserted
      line{ pos = 50.0 spacing = 1.0 } # spacing changes from 0.5 to 1.0
      line{ pos = 51.0 spacing = 1.0 } # inserted
      line{ pos = 100.0 spacing = 1.0 }
      line{ pos = 150.0 spacing = 1.0 }
      line{ pos = 200.0 spacing = 1.0 }
   }
}

structure{
   output_region_index{ boxes = no }
   output_material_index{ boxes = no }
   output_alloy_composition{ boxes = no }
   output_impurities{ boxes = no }

   region{
      everywhere{ # (default region in nextnano3)
      }
      binary{
         name = "Si" # p-Si substrate
      }
   }
   region{
      line{ # n-poly-Si (gate material)
         x = [-20E0, -$OxideThickness]
      }
      contact { name = GateContact }
      binary{
         #if $SEMICONDUCTORGATE  name = "Si"   # n-poly-Si
         #if $METALLICGATE       name = "SiO2" # must be defined as SiO2 because it is next to a SiO2 layer (limitation of nextnano++)
      }
   }
   region{
      line{ # p-Si substrate
         x = [0E0, 50E0]
      }
      contact { name = SiContact }
      binary{
         name = "Si" # p-Si substrate
      }
      integrate{
         electron_density{}
         hole_density{}
         label = "Si_substrate"
      }
   }
   region{
      line{ # p-Si substrate
         x = [50E0, 200E0]
      }
      contact { name = SiContact }
      binary{
         name = "Si" # p-Si substrate
      }
   }
   region{
      line{ # SiO2 gate dielectric
         x = [-$OxideThickness, 0E0]
      }
      binary{
         name = "SiO2" # SiO2
      }
   }
   region{ # doping
      line{
         x = [-20E0, -$OxideThickness]
      }
      doping{
         constant{
            name = "n-doping" # properties of this impurity type have to be specified below
            #if $ANTIFLAG conc = 1.0E20 
            #if $FLAG     conc = 5.0E19 
         }
      }
   }
   region{ # doping
      line{
         x = [0E0, 200E0]
      }
      doping{
         constant{
            name = "p-doping" # properties of this impurity type have to be specified below
            #if $ANTIFLAG conc = 1.0E18
            #if $FLAG     conc = 3.0E17
         }
      }
   }
}

impurities{
   donor{ # n-type
      name = "n-doping"
      energy = 0.054E0 # energy relative to 'nearest' band edge (n-type -> conduction band, p-type -> valence band)
      degeneracy = 2 # degeneracy of energy levels, 2 for n-type, 4 for p-type
   }
   acceptor{ # p-type
      name = "p-doping"
      energy = 0.045E0 # energy relative to 'nearest' band edge (n-type -> conduction band, p-type -> valence band)
      degeneracy = 4 # degeneracy of energy levels, 2 for n-type, 4 for p-type
   }
}

contacts{

   #if $SEMICONDUCTORGATE  fermi{
   #if $SEMICONDUCTORGATE     name = GateContact
   #if $SEMICONDUCTORGATE    #bias = -3.0e0
   #if $SEMICONDUCTORGATE     bias = [-3.0e0, 3.0e0] # apply stepping voltage to poisson-cluster (required for Dirichlet)
   #if $SEMICONDUCTORGATE     steps = 24 
   #if $SEMICONDUCTORGATE  }

   #if $METALLICGATE       schottky{
   #if $METALLICGATE          name = GateContact
   #if $METALLICGATE         #bias = -3.0e0
   #if $METALLICGATE          bias = [-3.0e0, 3.0e0] # apply stepping voltage to poisson-cluster (required for Dirichlet
   #if $METALLICGATE          steps = 24
   #if $METALLICGATE          barrier = 3.2
   #if $METALLICGATE       }

   fermi{
      name = SiContact
      bias = 0.0e0 # apply voltage to poisson-cluster (required for Dirichlet)
   }
}

classical{
   #Gamma{}
   #L{}
   Delta{}
   HH{}
   LH{}
   SO{}
   output_bandedges{ averaged = no }
   output_carrier_densities{}
   output_intrinsic_density{}
}

poisson{
   charge_neutral{}
   output_potential{}
}

currents{
   recombination_model{
      SRH         = no
      Auger       = no
      radiative   = no
   }
   output_fermi_levels{}
   output_currents{}
}

quantum {
   region{
      name = "quantum_region"
      x = [0E0, 50E0] # [Richter]        wavefunction does not penetrate  into SiO2 barrier (infinite barrier)
      boundary{
         x = dirichlet
      }
      
      #Gamma{
      #   num_ev = 40
      #}
      #L{
      #   num_ev = 40
      #}
      Delta{
         num_ev = 40
      }     
      HH{
         num_ev = 40
      }
      LH{
         num_ev = 40
      }
      SO{
         num_ev = 40
      }
      
      output_wavefunctions{
         max_num = 9999
         all_k_points = yes
         amplitudes = no
         probabilities = yes
      }
   }
}

run{
           poisson{}
   #if $QM quantum_poisson{}
}